#!/usr/bin/env python2
import pwn, sys, os, argparse

default = [
    'sleep',
    'pthread',
    'alarm',
    ]

if __name__ == "__main__":
    p = argparse.ArgumentParser(description="ELF binary patcher")
    p.add_argument('-o',
                   metavar = '<file>',
                   help = 'The output file (default: <input file>.patched).',
                   )
    p.add_argument('file',
                   metavar = '<file>',
                   help = 'ELF file to patch.',
                   )
    p.add_argument('funcs',
                   metavar = '<func>',
                   nargs = '*',
                   help = 'Functions to patch out.  To cancel a default patch use +<func>.',
                   )

    args = p.parse_args()

    elf = pwn.ELF(args.file)

    out = args.o or '%s.patched' % args.file

    override = []
    funcs  = []
    for f in args.funcs:
        if f[0] == '+':
            override.append(f[1:])
        else:
            funcs.append(f)

    def patch (f):
        if f in elf.plt and f not in override:
            elf.write(elf.plt[f], '\xc3')
            pwn.log.info('Disabled %s' % f)
            return True
        return False

    for f in default:
        patch(f)

    for f in funcs:
        if not patch(f):
            pwn.log.warning('Not in PLT: %s' % f)

    elf.save(out)
    os.chmod(out, os.stat(args.file).st_mode)
    pwn.log.info('Wrote patched file to %s' % out)
